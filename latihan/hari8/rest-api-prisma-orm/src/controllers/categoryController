const { PrismaClient } = require('../../generated/prisma')
const prisma = new PrismaClient()

const createCategory = async (req, res) => {
    let {id, name} = req.body
    try{
    const user = await prisma.category.create({
    data: {
    id, name
    },
    })

res.json({
    data: user,
    message: "category created",
    status: "success"
})

    } catch(err){ 
    res.json({
    message: "category not created",
    status: "not success"
})
}


}

const readCategory = async (req, res) => {

    const user = await prisma.category.findMany()
    res.json({
        user
    })

}

//const readCategoryById = (req, res) => {
  //  let {id} = req.params
  //  let queryText = `SELECT * FROM movies WHERE id=${id}`
  //  connectionPool.query(queryText, (err, data) => {
      //  if (err) {
       // console.error(err);
     //   return;
   // }
 //       res.json(data);
//    });
//}

const updateCategory = async (req, res) => {
    let {name} = req.body
    let {id} = req.params
    
    try{
    const movies = await prisma.category.update({
        where: {
            id: Number(id),
        },
        data: {
            name
        },
    })

    res.json({
        info : category,
        message : "category was Successfuly Updated",
        status: "success"
    })
    return
    }catch(err){
        res.json({
        info : null,
        message : "category was Notfound",
        status: "not found"
    })
    }
}

const deleteCategory = async (req, res) => {
    let {id} = req.params
    try{
    const user = await prisma.category.delete({
        
  where: {
    id: Number(id),
  },
  })

  res.json({
        info: null,
        message: "category was successfully Deleted",
        status : "success"
    })
    
   }catch(err){
        res.json({
            info: null,
            message: err.message,
            status : "error"
        })
    }

}

module.exports = {createCategory, readCategory, updateCategory, deleteCategory}